
releaseName: ""
## Common parameters
nameOverride: "mongodb"
fullnameOverride: ""
namespaceOverride: ""
clusterDomain: cluster.local
extraDeploy: []
## MongoDB parameters
image:
  registry: docker.io
  repository: bitnami/mongodb
  tag: 7.0.8-debian-12-r4
  pullPolicy: IfNotPresent
  debug: false
## Deployment architecture: standalone or replicaset
architecture: replicaset

## Enable authentication
auth:
  enabled: true
  rootUser: root
  rootPassword: "" # Change this
  usernames: []
  passwords: []
  databases: []
  replicaSetKey: "" # Change this

## Enable TLS for secure communication
tls: # define additional users here
  enabled: false
  autoGenerated: false

## Use a StatefulSet instead of a Deployment (recommended for production)
useStatefulSet: true
## MongoDB System Log configuration
systemLogVerbosity: 0
disableSystemLog: false
## Enable journaling
enableJournal: true

## Configure resource requests and limits (change as per your requirements)
resources:
  limits:
    cpu: "4"
    memory: "8Gi"
  requests:
    cpu: "250m"
    memory: "512Mi"

## Liveness and Readiness Probes (change as per your environment)
livenessProbe:
  enabled: true
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1
readinessProbe:
  enabled: true
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  successThreshold: 1

## Replica Set configuration
replicaCount: 0
replicaSetName: rs0
replicaSetHostnames: true

## Persistence
persistence:
  enabled: true
  storageClass: "" # Change to match your storage class
  accessModes:
    - ReadWriteOnce
  size: ""
  resourcePolicy: "keep"

###############################################
## Configure backups
###############################################
backup:
  enabled: false
  cronjob:
    schedule: "0 1 * * *"
    concurrencyPolicy: Allow
    failedJobsHistoryLimit: 1
    successfulJobsHistoryLimit: 3
    restartPolicy: OnFailure
    storage:
      size: ""
      resourcePolicy: "keep"
      storageClass: ""
      accessModes:
        - ReadWriteOnce
      mountPath: /backup/mongodb

###############################################
## Network policies
###############################################
networkPolicy:
  enabled: false
## Metrics (if needed with Prometheus Operator)
metrics:
  enabled: false
global:
  namespaceOverride: ""
## External Access to MongoDB(&reg;) nodes configuration
externalAccess:
  enabled: false
  service:
    type: NodePort
    nodePorts: []
pdb:
  create: true
arbiter:
  enabled: true
